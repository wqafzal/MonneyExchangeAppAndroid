plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.moneyexchangeapp"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "backend"
    productFlavors {

        Production {

            dimension "backend"
            def domainName = "openexchangerates.org/api"

            buildConfigField "boolean", "enabledLogging", "false"
            buildConfigField "boolean", "useCachedData", "false"
            buildConfigField "String", "BASE_URL", "\"https://${domainName}/\""
            buildConfigField "String", "apiKey", "\"128de186a401415d8e39f4b10f173c1d\""
            versionCode = project.getVersionCode()
            versionName = getFormattedDate()
        }

        Staging {
            dimension "backend"
            def domainName = "openexchangerates.org/api"

            applicationIdSuffix ".staging"

            buildConfigField "boolean", "enabledLogging", "true"
            buildConfigField "boolean", "useCachedData", "false"
            buildConfigField "String", "BASE_URL", "\"https://${domainName}/\""
            buildConfigField "String", "apiKey", "\"128de186a401415d8e39f4b10f173c1d\""
            versionCode = project.getVersionCode()
            versionName = getFormattedDate()
        }

        Development {
            dimension "backend"
            def domainName = "openexchangerates.org/api"

            applicationIdSuffix ".dev"

            buildConfigField "boolean", "enabledLogging", "true"
            buildConfigField "boolean", "useCachedData", "false"
            buildConfigField "String", "BASE_URL", "\"https://${domainName}/\""
            buildConfigField "String", "apiKey", "\"128de186a401415d8e39f4b10f173c1d\""
            versionCode = project.getVersionCode()
            versionName = getFormattedDate()
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.room:room-common:2.4.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    implementation 'androidx.constraintlayout:constraintlayout-core:1.0.4'
    //Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
    //Navigation UI
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    // retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //Room
    def room_version = "2.4.2"

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    def hilt_work_version = "1.0.0"
    implementation "androidx.hilt:hilt-work:$hilt_work_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_work_version"

    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation("com.squareup.okhttp3:mockwebserver:4.10.0")
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}


static def getFormattedDate() {
    def date = new Date()
    def formatted = date.format('yy.MM.dd')
    return formatted
}